<?xml version="1.0" ?>
<!--
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="background.standards">
  <title>標準への適合</title>

  <sect4 xml:id="background.standards.c__">
    <title>C++</title>
    <para>
      Boost.Regex は <link xlink:href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1836.pdf">Technical Report on C++ Library Extensions</link> への適合を意図している。
    </para>
  </sect4>

  <sect4 xml:id="background.standards.ecmascript___javascript">
    <title>ECMAScript / JavaScript</title>
    <para>
      以下を除く ECMAScript 正規表現構文のすべての機能をサポートする。
    </para>
    <para>
      エスケープシーケンス <phrase role="regex-pattern">\u</phrase> は Unicode エスケープシーケンスではなく、大文字にマッチする（<phrase role="regex-pattern">[[:upper:]]</phrase> と同じ）。Unicode エスケープには <phrase role="regex-pattern">\x{DDDD}</phrase> を使用する。
    </para>
  </sect4>

  <sect4 xml:id="background.standards.perl">
    <title>Perl</title>
    <para>
      以下を除く Perl のほとんどすべての機能をサポートする。
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  <phrase role="regex-pattern">(?{code})</phrase> はコンパイルの必要な型付けの強い言語では実装不可能である。
	</para>
      </listitem>
      <listitem>
	<para>
	  <phrase role="regex-pattern">(??{code})</phrase> はコンパイルの必要な型付けの強い言語では実装不可能である。
	</para>
      </listitem>
      <listitem>
	<para>
	  <link xlink:href="http://perldoc.perl.org/perlre.html#Special-Backtracking-Control-Verbs">特殊なバックトラック制御記号</link>（<phrase role="regex-pattern">(*VERB)</phrase>）
	  <footnote>
	    <para>
	      訳注　<foreignphrase xml:lang="en">“Special backtracking control verbs”</foreignphrase>。Perl の新しい実験的機能のため、定訳らしきものがないのかもしれません。例えば <uri xlink:href="http://fleur.hio.jp/perldoc/perl/5.9.5/pod/perlre.ja.html">http://fleur.hio.jp/perldoc/perl/5.9.5/pod/perlre.ja.html</uri> を参照してください。
	    </para>
	  </footnote>
	  は、現時点では実装していない。
	</para>
      </listitem>
      <listitem>
	<para>
	  また、<phrase role="regex-pattern">^</phrase> <phrase role="regex-pattern">$</phrase> <phrase role="regex-pattern">\Z</phrase> の機能は Perl とは少し動作が異なる。これらは <phrase role="regex-pattern">\n</phrase> 以外の改行シーケンスも取り扱う。後述の Unicode の要件を見よ。
	</para>
      </listitem>
    </itemizedlist>
  </sect4>

  <sect4 xml:id="background.standards.posix">
    <title>POSIX</title>
    <para>
      以下を除く POSIX 標準および拡張のすべての機能をサポートする。
    </para>
    <para>
      C ロカールでは特性クラスを使って明示的に登録しない限り、POSIX 標準で指定されているもの以外の照合名は解釈されない。
    </para>
    <para>
      文字等価クラス（<phrase role="regex-pattern">[[=a=]]</phrase> など）は Win32 以外ではおそらくバグがある。この機能の実装には、システムが生成する文字列ソートキーについての情報が必要である。この機能が必要で、既定の実装が使用しているプラットフォームで動作しない場合は、カスタムの特性クラスを用意する必要がある。
    </para>
  </sect4>

  <sect4 xml:id="background.standards.unicode">
    <title>Unicode</title>
    <para>
      以下のコメントは <link xlink:href="http://www.unicode.org/reports/tr18/tr18-11.html">Unicode Technical Report #18: Unicode Regular Expressions version 11</link> に対するものである。
    </para>
    <informaltable>
      <thead>
	<tr>
	  <th>項目</th>
	  <th>機能</th>
	  <th>サポート</th>
	</tr>
      </thead>
      <tbody>
	<tr>
	  <td>1.1</td>
	  <td>16 進表記</td>
	  <td>サポート。コードポイント U+DDDD を表すには <phrase role="regex-pattern">\x{DDDD}</phrase> を使用する。</td>
	</tr>
	<tr>
	  <td>1.2</td>
	  <td>文字プロパティ</td>
	  <td>一般分類の名前はすべてサポートする。用字系およびその他の名前は現時点ではサポートしない。</td>
	</tr>
	<tr>
	  <td>1.3</td>
	  <td>差および交差</td>
	  <td>前方先読みにより間接的にサポートする。<phrase role="regex-pattern">(?=[[:X:]])[[:Y:]]</phrase> は文字プロパティ <replaceable>X</replaceable> と <replaceable>Y</replaceable> の交差を与える。<phrase role="regex-pattern">(?![[:X:]])[[:Y:]]</phrase> は <replaceable>Y</replaceable> の中で <replaceable>X</replaceable> に含まれないもの（差）を与える。</td>
	</tr>
	<tr>
	  <td>1.4</td>
	  <td>単純な単語境界</td>
	  <td>適合する。送りなし記号は単語構成文字として扱う。</td>
	</tr>
	<tr>
	  <td>1.5</td>
	  <td>大文字小文字を区別しないマッチ</td>
	  <td>サポートする。この水準では大文字小文字の対応は一対一の変換であり、多対多のケースフォールディング（“ß” から “SS” への変換）はサポートしない。</td>
	</tr>
	<tr>
	  <td>1.6</td>
	  <td>行境界</td>
	  <td><phrase role="regex-pattern">.</phrase>が <phrase role="regex-input">\r\n</phrase> の 1 文字ずつにしかマッチしないということ以外はサポートする。単語境界以外は正しくマッチする（<phrase role="regex-input">\r\n</phrase> シーケンスの中間にマッチしない）。</td>
	</tr>
	<tr>
	  <td>1.7</td>
	  <td>コードポイント</td>
	  <td>サポートする。<function>u32*</function> アルゴリズムを使用して UTF-8 、UTF-16 および UTF-32 をすべて 32 ビットコードポイント列として扱うことができる。</td>
	</tr>
	<tr>
	  <td>2.1</td>
	  <td>正規等価</td>
	  <td>サポートしない。ライブラリのユーザがテキストを正規表現と同じ正規形に変換するしかない。</td>
	</tr>
	<tr>
	  <td>2.2</td>
	  <td>既定の書記素</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>2.3</td>
	  <td>既定の単語境界</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>2.4</td>
	  <td>既定のあいまいマッチ</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>2.5</td>
	  <td>名前付きプロパティ</td>
	  <td>サポートする。正規表現 <phrase role="regex-pattern">[[:name:]]</phrase> 、<phrase role="regex-pattern">\N{Name}</phrase> は名前付き文字 <replaceable>“name”</replaceable> にマッチする。</td>
	</tr>
	<tr>
	  <td>2.6</td>
	  <td>プロパティ名中のワイルドカード</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>3.1</td>
	  <td>区切り文字のテーラリング</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>3.2</td>
	  <td>書記素のテーラリング</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>3.3</td>
	  <td>単語境界のテーラリング</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>3.4</td>
	  <td>テーラリングを用いたあいまいなマッチ</td>
	  <td>部分的にサポートする。<phrase role="regex-pattern">[[=c=]]</phrase> は <replaceable>c</replaceable> と同じ第 1 位の等価クラスを持つ文字にマッチする。</td>
	</tr>
	<tr>
	  <td>3.5</td>
	  <td>範囲のテーラリング</td>
	  <td>サポートする。<constant>collate</constant> フラグを設定して式を構築した場合、<phrase role="regex-pattern">[a-b]</phrase> は a から b の範囲に照合される文字にマッチする。</td>
	</tr>
	<tr>
	  <td>3.6</td>
	  <td>文脈を考慮したマッチ</td>
	  <td></td>
	</tr>
	<tr>
	  <td>3.7</td>
	  <td>インクリメンタルマッチ</td>
	  <td>サポートする。正規表現アルゴリズムにフラグ <constant>match_partial</constant> を渡す。</td>
	</tr>
	<tr>
	  <td>3.8</td>
	  <td>コンパイル済み文字集合の共有</td>
	  <td>サポートしない。</td>
	</tr>
	<tr>
	  <td>3.9</td>
	  <td>可能なマッチの集合</td>
	  <td>サポートしない。しかしながらこの情報は正規表現のマッチを最適化するために内部的に使用し、可能なマッチが存在しない場合に高速に処理を返すようになっている。</td>
	</tr>
	<tr>
	  <td>3.10</td>
	  <td>フォールディング付きのマッチ</td>
	  <td>サポートしない。カスタムの正規表現特性クラスを用いることで似たような効果を得ることができる。</td>
	</tr>
	<tr>
	  <td>3.11</td>
	  <td>カスタムマッチ</td>
	  <td>サポートしない。</td>
	</tr>
      </tbody>
    </informaltable>
  </sect4>
</section>
