<?xml version="1.0" ?>
<!--
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="unicode">
  <title>Unicode と Boost.Regex</title>
  <para>
    Boost.Regex で Unicode 文字列を使う方法は 2 つある。
  </para>

  <sect4 xml:id="unicode.rely_on_wchar_t">
    <title>wchar_t への依存</title>
    <para>
      プラットフォームの <type>wchar_t</type> 型が Unicode 文字列を保持でき、かつプラットフォームの C/C++ 実行時ライブラリがワイド文字定数（が <function>std::iswspace</function> や <function>std::iswlower</function> に渡されるなどのケース）を正しく処理できるのであれば、<classname>boost::wregex</classname> を使った Unicode 処理が可能である。しかしながら、このアプローチにはいくつか不便がある。
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  移植性がない。<type>wchar_t</type> の幅や実行時ライブラリがワイド文字を Unicode として扱うかどうかについては何の保証もない。ほとんどの Windows コンパイラは保証しているが、多くの Unix システムではそうではない。
	</para>
      </listitem>
      <listitem>
	<para>
	  Unicode 固有の文字クラスはサポートされない（<phrase role="regex-pattern">[[:Nd:]]</phrase> 、<phrase role="regex-pattern">[[:Po:]]</phrase> など）。
	</para>
      </listitem>
      <listitem>
	<para>
	  ワイド文字シーケンスで符号化された文字列しか検索できない。UTF-8 や UTF-16 でさえも多くのプラットフォームで検索できない。
	</para>
      </listitem>
    </itemizedlist>
  </sect4>

  <sect4 xml:id="unicode.use_a_unicode_aware_regular_expression_type_">
    <title>Unicode 対応の正規表現型の使用</title>
    <para>
      <link xlink:href="http://www.ibm.com/software/globalization/icu/">ICU ライブラリ</link>があれば <link linkend="install.building_with_unicode_and_icu_su">Boost.Regex から利用できるように設定</link>できる。これにより Unicode 固有の文字プロパティや、UTF-8 、UTF-16 、および UTF-32 で符号化された文字列の検索をサポートする特別な正規表現型（<classname>boost::u32regex</classname>）が提供される。<link linkend="ref.non_std_strings.icu">ICU 文字列クラスのサポート</link>を見よ。
    </para>
  </sect4>
</section>
