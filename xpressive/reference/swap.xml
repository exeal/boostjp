<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="swap">
  <refmeta>
    <refentrytitle>swap 関数テンプレート</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::swap</refname>
    <refpurpose>2 つの <classname linkend="basic_regex">basic_regex</classname> オブジェクトの内容を交換する。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>// ヘッダ：&lt;boost/xpressive/basic_regex.hpp&gt;</funcsynopsisinfo>
      <funcprototype>
	<funcdef>template&lt;typename BidiIter&gt;
	void <function>swap</function></funcdef>
	<paramdef>basic_regex&lt; BidiIter &gt; &amp; <parameter>left</parameter>, basic_regex&lt; BidiIter &gt; &amp; <parameter>right</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>
    <note>
      <para>
	参照まで追跡しない浅い交換である。<classname linkend="basic_regex">basic_regex</classname> オブジェクトを参照により別の正規表現に組み込み、他の <classname linkend="basic_regex">basic_regex</classname> オブジェクトと内容を交換すると、外側の正規表現からはこの変更を検出できない。これは <function>swap()</function> が例外を送出できないためである。
      </para>
    </note>
    <variablelist spacing="compact">
      <varlistentry>
	<term>引数：</term>
	<listitem>
	  <variablelist spacing="compact">
	    <varlistentry>
	      <term><parameter class="function">left</parameter></term>
	      <listitem>
		<para>第 1 の <classname linkend="basic_regex">basic_regex</classname> オブジェクト。</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term><parameter class="function">right</parameter></term>
	      <listitem>
		<para>第 2 の <classname linkend="basic_regex">basic_regex</classname> オブジェクト。</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>例外：</term>
	<listitem>
	  <para>送出しない。</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsection>
</refentry>
