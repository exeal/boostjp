<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="op.front">
  <refmeta>
    <refentrytitle>front 構造体テンプレート</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::op::front</refname>
    <refpurpose><classname linkend="op.front">front</classname> は、コンテナの最前列の要素にアクセスする PolymorphicFunctionObject である。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis language="C++">// ヘッダ：&lt;<filename class="headerfile" linkend="header.regex_actions_hpp">boost/xpressive/regex_actions.hpp</filename>&gt;

struct <classname linkend="op.front">front</classname> {
  // メンバクラス、構造体、共用体
  template&lt;typename Sig&gt;
  struct <classname linkend="op.front.result.0">result</classname> {
  };
  template&lt;typename This, typename Sequence&gt;
  struct <classname linkend="op.front.result.1">result</classname>&lt;This(Sequence)&gt; {
    // 型
    typedef remove_reference&lt; Sequence &gt;::type                                                                                              sequence_type;
    typedef mpl::if_c&lt; is_const&lt; sequence_type &gt;::value, typename sequence_type::const_reference, typename sequence_type::reference &gt;::type type;         
  };

  // <link linkend="op.front.public-member-functions">公開メンバ関数</link>
  template&lt;typename Sequence&gt;
    <classname linkend="op.front.result.0">result</classname>&lt; front(Sequence &amp;)&gt;::type <methodname linkend="op.front.operator.0">operator()</methodname>(Sequence &amp;) const;
};</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>

    <refsection xml:id="op.front.public-member-functions">
      <title>front 公開メンバ関数</title>
      <orderedlist>
	<listitem xml:id="op.front.operator.0">
	  <methodsynopsis language="C++">
	    <modifier>template&lt;typename Sequence&gt;</modifier>
	    <type>result&lt; front(Sequence &amp;)&gt;::type</type>
	    <methodname>operator()</methodname>
	    <methodparam>
	      <type>Sequence &amp;</type>
	      <parameter>seq</parameter>
	    </methodparam>
	    <modifier>const</modifier>
	  </methodsynopsis>
	  <variablelist spacing="compact">
	    <varlistentry>
	      <term>引数：</term>
	      <listitem>
		<variablelist spacing="compact">
		  <varlistentry>
		    <term><parameter>seq</parameter></term>
		    <listitem>
		      <para>最前列の要素にアクセスするシーケンス。</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>戻り値：</term>
	      <listitem>
		<para><code language="C++">seq.front()</code></para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </orderedlist>
    </refsection>
  </refsection>
</refentry>
