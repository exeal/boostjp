<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="reference">
  <refmeta>
    <refentrytitle>reference 構造体テンプレート</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::reference</refname>
    <refpurpose><classname>reference&lt;&gt;</classname> は、xpressive の意味アクションで使用できる参照の遅延ラッパである。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis language="C++">// ヘッダ：&lt;<filename class="headerfile" linkend="header.regex_actions_hpp">boost/xpressive/regex_actions.hpp</filename>&gt;

template&lt;typename T&gt;
struct <classname linkend="reference">reference</classname> : public proto::extends&lt; proto::terminal&lt; reference_wrapper&lt; T &gt; &gt;::type, reference&lt; T &gt; &gt;
{
  // <link linkend="reference.construct-copy-destruct">構築、コピー、解体</link>
  explicit <methodname linkend="reference.reference">reference</methodname>(T &amp;);

  // <link linkend="reference.public-member-functions">公開メンバ関数</link>
  T &amp; <methodname linkend="reference.get">get</methodname>() const;
};</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>
    <para>
      既存のオブジェクトへの遅延参照の作成し、xpressive の意味アクションで読み書きできるようにする方法を示した例である。
    </para>
    <programlisting language="C++">using namespace boost::xpressive;
std::map&lt;std::string, int&gt; result;
reference&lt;std::map&lt;std::string, int&gt; &gt; result_ref(result);

// =&gt; で区切られた単語と整数の組にマッチし、
// 結果を std::map&lt;&gt; に詰め込む
sregex pair = ( (s1= +_w) &gt;&gt; "=&gt;" &gt;&gt; (s2= +_d) )
    [ result_ref[s1] = as&lt;int&gt;(s2) ];</programlisting>

    <refsection>
      <title>テンプレート引数</title>
      <orderedlist>
	<listitem>
	  <synopsis language="C++">typename T</synopsis>
	  <para>参照先の型。</para>
	</listitem>
      </orderedlist>
    </refsection>

    <refsection xml:id="reference.construct-copy-destruct">
      <title>reference 構築、コピー、解体の公開演算</title>
      <orderedlist>
	<listitem xml:id="reference.reference">
	  <methodsynopsis language="C++">
	    <modifier>explicit</modifier>
	    <methodname>reference</methodname>
	    <methodparam>
	      <type>T &amp;</type>
	      <parameter>t</parameter>
	    </methodparam>
	  </methodsynopsis>
	  <para><parameter>t</parameter> への参照を格納する。</para>
	  <variablelist spacing="compact">
	    <varlistentry>
	      <term>引数：</term>
	      <listitem>
		<variablelist spacing="compact">
		  <varlistentry>
		    <term><parameter>t</parameter></term>
		    <listitem>
		      <para>オブジェクトへの参照</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </orderedlist>
    </refsection>

    <refsection xml:id="reference.public-member-functions">
      <title>reference の公開メンバ関数</title>
      <orderedlist>
	<listitem xml:id="reference.get">
	  <methodsynopsis language="C++">
	    <type>T &amp;</type>
	    <methodname>get</methodname>
	    <void/>
	    <modifier>const</modifier>
	  </methodsynopsis>
	  <para>格納した値にアクセスする。</para>
	</listitem>
      </orderedlist>
    </refsection>
  </refsection>
</refentry>
