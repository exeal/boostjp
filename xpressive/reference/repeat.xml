<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="repeat">
  <refmeta>
    <refentrytitle>repeat 関数</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::repeat</refname>
    <refpurpose>部分式を複数回繰り返す。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis language="C++">// ヘッダ：&lt;<filename class="headerfile" linkend="header.regex_primitives_hpp">boost/xpressive/regex_primitives.hpp</filename>&gt;
    
template&lt;unsigned int Min, unsigned int Max, typename <type xlink:href="http://www.boost.org/doc/html/Expr.html">Expr</type>&gt;
  <replaceable>unspecified</replaceable> repeat(Expr const &amp; expr);
template&lt;unsigned int Count, typename <type xlink:href="http://www.boost.org/doc/html/Expr.html">Expr2</type>&gt;
  <replaceable>unspecified</replaceable> repeat(Expr2 const &amp; expr2);</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>
    <para>
      <function>repeat&lt;&gt;()</function> 関数テンプレートは 2 形式ある。部分式に <replaceable>N</replaceable> 回マッチさせる場合は <code language="C++">repeat&lt;N&gt;(expr)</code> を使用する。部分式を <replaceable>M</replaceable> から <replaceable>N</replaceable> 回マッチさせるには <code language="C++">repeat&lt;M,N&gt;(expr)</code> を使用する。
    </para>
    <para>
      <function>repeat&lt;&gt;()</function> 関数は貪欲な数量子を作成する。貪欲でない数量子にするには <code language="C++">-repeat&lt;M,N&gt;(expr)</code> のように単項マイナス演算子を適用する。
    </para>
    <variablelist spacing="compact">
      <varlistentry>
	<term>引数：</term>
	<listitem>
	  <variablelist spacing="compact">
	    <varlistentry>
	      <term><parameter>expr</parameter></term>
	      <listitem>
		<para>繰り返す部分式。</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsection>
</refentry>
