<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="set">
  <refmeta>
    <refentrytitle>set グローバル変数</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::set</refname>
    <refpurpose>文字集合（文字セット）を作成するのに使用する。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis language="C++">// ヘッダ：&lt;<filename class="headerfile" linkend="header.regex_primitives_hpp">boost/xpressive/regex_primitives.hpp</filename>&gt;

<replaceable>unspecified</replaceable> set;</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>
    <para>
      識別子 <constant>set</constant> を使って文字集合を作成する方法は 2 つある。より簡単なのは <code language="C++">(set= 'a','b','c')</code> のように集合内の文字をカンマで区切って並べる方法である。この集合は <phrase role="regex-input">a</phrase> 、<phrase role="regex-input">b</phrase> 、<phrase role="regex-input">c</phrase> にマッチする。もう1つはsetの添字演算子の引数として集合を定義する方法である。例えば <code language="C++">set[ 'a' | range('b','c') | digit ]</code> は <phrase role="regex-input">a</phrase> 、<phrase role="regex-input">b</phrase> 、<phrase role="regex-input">c</phrase> 、数字にマッチする。
    </para>
    <para>
      <constant>set</constant> の補集合を得るには ~ 演算子を適用する。例えば <code language="C++">~(set= 'a','b','c')</code> は <phrase role="regex-input">a</phrase> 、<phrase role="regex-input">b</phrase> 、<phrase role="regex-input">c</phrase> 以外の文字にマッチする。
    </para>
    <para>
      <constant>set</constant> は他の集合や補集合と和をとることもできる。例えば <code language="C++">set[ ~digit | ~(set= 'a','b','c') ]</code> のようにする。
    </para>
  </refsection>
</refentry>
