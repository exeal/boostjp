<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="function">
  <refmeta>
    <refentrytitle>function 構造体テンプレート</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>boost::xpressive::function</refname>
    <refpurpose>通常の関数オブジェクト型を xpressive の意味アクションで使用する、遅延関数オブジェクト型に変換する単項メタ関数。</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis language="C++">// In header: &lt;<filename class="headerfile" linkend="header.regex_actions_hpp">boost/xpressive/regex_actions.hpp</filename>&gt;

template&lt;typename PolymorphicFunctionObject&gt;
struct function {
  // 型
  typedef proto::terminal&lt; PolymorphicFunctionObject &gt;::type type;
};</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>説明</title>
    <para>
      通常の多態的関数オブジェクト型を xpressive の意味アクションで使用するオブジェクトを宣言する型に変換するには、<classname linkend="function">xpressive::function</classname>&lt;&gt; を使用する。
    </para>
    <para>
      例えば <constant>xpressive::push_back</constant> グローバルオブジェクトは、値をコンテナに追加する遅延アクションを作成するのに使用する。これは <classname linkend="function">xpressive::function</classname>&lt;&gt; を使って以下のように定義する：
    </para>
    <programlisting language="C++">xpressive::function&lt;xpressive::op::push_back&gt;::type const push_back = {};</programlisting>
    <para>
      ここで <classname linkend="op.push_back">op::push_back</classname> は、その第 2 引数を第 1 引数へ追加する通常の関数オブジェクトである。この定義により、<constant>xpressive::push_back</constant> を以下のように意味アクション内で使用できる：
    </para>
    <programlisting language="C++">namespace xp = boost::xpressive;
using xp::_;
std::list&lt;int&gt; result;
std::string str("1 23 456 7890");
xp::sregex rx = (+_d)[ xp::push_back(xp::ref(result), xp::as&lt;int&gt;(_) ]
    &gt;&gt; *(' ' &gt;&gt; (+_d)[ xp::push_back(xp::ref(result), xp::as&lt;int&gt;(_) ) ]);</programlisting>
  </refsection>
</refentry>
