<?xml version="1.0" ?>
<!--
  Copyright (c) 2008 Eric Niebler
  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="appendices.appendix_3__differences_from_boost_regex">
  <title>付録 3：Boost.Regexとの違い</title>
  
  <para>
    xpressive のユーザーの多くは <link xlink:href="http://www.boost.org/libs/regex/">Boost.Regex</link> ライブラリになじんでいると思うので、xpressive と <link xlink:href="http://www.boost.org/libs/regex">Boost.Regex</link> の重大な違いについて見落としているとしたら私の怠慢である。特に以下の点を挙げる。
  </para>
  
  <itemizedlist>
    <listitem>
      <para>
	<classname>xpressive::basic_regex&lt;&gt;</classname> は、文字型ではなくイテレータ型に対するテンプレートである。
      </para>
    </listitem>
    <listitem>
      <para>
	<classname>xpressive::basic_regex&lt;&gt;</classname> は、文字列から直接構築できない。文字列から正規表現オブジェクトを構築するには、代わりに <methodname>basic_regex::compile()</methodname> か <classname>regex_compiler&lt;&gt;</classname> を使用しなければならない。
      </para>
    </listitem>
    <listitem>
      <para>
	<classname>xpressive::basic_regex&lt;&gt;</classname> は <methodname>imbue()</methodname> メンバ関数を持たない。代わりに <classname>xpressive::compiler&lt;&gt;</classname> ファクトリに <methodname>imbue()</methodname> メンバ関数がある。
      </para>
    </listitem>
    <listitem>
      <para>
	<classname>boost::basic_regex&lt;&gt;</classname>は <classname>std::basic_string&lt;&gt;</classname>メンバのサブセットをもつが、<classname>xpressive::basic_regex&lt;&gt;</classname>にはない。欠けているメンバは、<methodname>assign()</methodname> 、<methodname>operator[]()</methodname> 、<methodname>max_size()</methodname> 、<methodname>begin()</methodname> 、<methodname>end()</methodname> 、<methodname>size()</methodname> 、<methodname>compare()</methodname> および <methodname>operator=(std::basic_string&lt;&gt;)</methodname> である。
      </para>
    </listitem>
    <listitem>
      <para>
	他に <classname>boost::basic_regex&lt;&gt;</classname> にあって <classname>xpressive::basic_regex&lt;&gt;</classname> にないメンバ関数は、<methodname>set_expression()</methodname> 、<methodname>get_allocator()</methodname> 、<methodname>imbue()</methodname> 、<methodname>getloc()</methodname> 、<methodname>getflags()</methodname> および <methodname>str()</methodname> である。
      </para>
    </listitem>
    <listitem>
      <para>
	<classname>xpressive::basic_regex&lt;&gt;</classname> は RegexTraits テンプレート引数をもたない。正規表現構文と地域化に関する振る舞いをカスタマイズするには、<classname>regex_compiler&lt;&gt;</classname>およびカスタムの <classname>std::locale</classname> 正規表現ファセットを使用する。
      </para>
    </listitem>
    <listitem>
      <para>
	<classname>xpressive::basic_regex&lt;&gt;</classname> および <classname>xpressive::match_results&lt;&gt;</classname> は Allocator テンプレート引数を持たない。これはこういう設計である。
      </para>
    </listitem>
    <listitem>
      <para>
	<constant>match_not_dot_null</constant> および <constant>match_not_dot_newline</constant> は <type role="enum">match_flag_type</type> 列挙から <type role="enum">syntax_option_type</type> 列挙に移動しており、名前も <constant>not_dot_null</constant> および <constant>not_dot_newline</constant> に変更している。
      </para>
    </listitem>
    <listitem>
      <para>
	次の <type role="enum">syntax_option_type</type> 列挙値はサポートしない：<constant>escape_in_lists</constant> 、<constant>char_classes</constant> 、<constant>intervals</constant> 、<constant>limited_ops</constant> 、<constant>newline_alt</constant> 、<constant>bk_plus_qm</constant> 、<constant>bk_braces</constant> 、<constant>bk_parens</constant> 、<constant>bk_refs</constant> 、<constant>bk_vbar</constant> 、<constant>use_except</constant> 、<constant>failbit</constant> 、<constant>literal</constant> 、<constant>perlex</constant> 、<constant>basic</constant> 、<constant>extended</constant> 、<constant>emacs</constant> 、<constant>awk</constant> 、<constant>grep</constant> 、<constant>egrep</constant> 、<constant>sed</constant> 、<constant>JavaScript</constant> 、<constant>JScript</constant>。
      </para>
    </listitem>
    <listitem>
      <para>
	次の <type role="enum">match_flag_type</type> 列挙値はサポートしない：<constant>match_not_bob</constant> 、<constant>match_not_eob</constant> 、<constant>match_perl</constant> 、<constant>match_posix</constant> および <constant>match_extra</constant>。
      </para>
    </listitem>
  </itemizedlist>
  <para>
    また、現在の実装では xpressive の正規表現アルゴリズムは病的な振る舞いや例外によるアボートを検出しない。病的な振る舞いをせず効率のよいパターンを書くのはあなたの責任である。
  </para>
</section>
