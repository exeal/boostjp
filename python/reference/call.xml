<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="v2.call">
  <title>boost/python/call.hpp</title>

  <section xml:id="v2.call.introduction">
    <title>はじめに</title>
    <para>
      <filename class="headerfile">&lt;boost/python/call.hpp&gt;</filename> は、C++ から Python の呼び出し可能オブジェクトを起動する <function linkend="v2.call.call-spec">call</function> 関数テンプレート多重定義群を定義する。
    </para>
  </section>

  <section xml:id="v2.call.functions">
    <title>関数</title>

    <section xml:id="v2.call.call-spec">
      <title>call</title>
      <funcsynopsis language="C++">
	<funcsynopsisinfo>template &lt;class R, class A1, class A2, ... class An&gt;</funcsynopsisinfo>
	<funcprototype>
	  <?dbhtml funcsynopsis-style="ansi"?>
	  <funcdef>R <function>call</function></funcdef>
	  <paramdef>PyObject* <parameter>callable</parameter></paramdef>
	  <paramdef>A1 const&amp;</paramdef>
	  <paramdef>A2 const&amp;</paramdef>
	  <paramdef>... A<replaceable>n</replaceable> const&amp;</paramdef>
	</funcprototype>
      </funcsynopsis>
      <variablelist spacing="compact">
	<varlistentry>
	  <term>要件：</term>
	  <listitem>
	    <para>
	      <type>R</type> はポインタ型、参照型、またはアクセス可能なコピーコンストラクタを持つ完全型。
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>効果：</term>
	  <listitem>
	    <para>
	      Python 内で <code language="C++">callable(a1, a2, ...a<replaceable>n</replaceable>)</code> を起動する。<code language="C++">a1...a<replaceable>n</replaceable></code> は <function>call()</function> に対する引数で Python のオブジェクトに変換する。
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>戻り値：</term>
	  <listitem>
	    <para>
	      Python の呼び出し結果を C++ の型 <type>R</type> に変換したもの。
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>根拠：</term>
	  <listitem>
	    <para>
	      完全なセマンティクスの説明と根拠については、<link linkend="v2.callbacks">このページ</link>を見よ。
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </section>

  <section xml:id="v2.call.examples">
    <title>例</title>
    <para>
      以下の C++ 関数は、Python の呼び出し可能オブジェクトをその 2 つの引数に適用し結果を返す。Python の例外が送出した場合や結果を <code language="C++">double</code> に変換できない場合は例外を投げる。
    </para>
    <programlisting language="C++"><![CDATA[double apply2(PyObject* func, double x, double y)
{
   return boost::python::call<double>(func, x, y);
}]]></programlisting>
  </section>
</section>
