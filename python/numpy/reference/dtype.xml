<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="numpy.reference.dtype">
  <refmeta>
    <refentrytitle>dtype</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>dtype</refname>
    <refpurpose>
      <link xlink:href="http://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html#data-type-objects-dtype">dtype</link> は ndarray の要素の型を記述するオブジェクトである。<filename class="headerfile">&lt;boost/python/numpy/dtype.hpp&gt;</filename> は、組み込みの C++ オブジェクトから等価な numpy.dtype Python オブジェクトを生成する、ユーザ定義型からカスタムの dtype を作成するのに必要なメソッド呼び出しを含む。
    </refpurpose>
  </refnamediv>

  <refsynopsisdiv xml:id="numpy.reference.dtype.synopsis">
    <synopsis language="C++">namespace boost
{
namespace python
{
namespace numpy
{

class <classname>dtype</classname> : public <classname>object</classname>
{
  static python::detail::new_reference <methodname>convert</methodname>(object::object_cref arg, bool align);
public:

  // 任意の Python オブジェクトをデータ型記述子オブジェクトへ変換する。
  template &lt;typename T&gt;
  explicit <methodname linkend="numpy.reference.dtype.constructors.0">dtype</methodname>(T arg, bool align=false);

  // 与えられたスカラーテンプレート型に相当する組み込みの numpy dtype を得る。
  template &lt;typename T&gt; static <classname>dtype</classname> <methodname linkend="numpy.reference.dtype.constructors.get_builtin">get_builtin</methodname>();

  // データ型のバイトサイズを返す。
  int <methodname linkend="numpy.reference.dtype.accessors.get_itemsize">get_itemsize</methodname>() const;
};

}
}
}</synopsis>
  </refsynopsisdiv>

  <refsection xml:id="numpy.reference.dtype.constructors">
    <title>コンストラクタ</title>
    <orderedlist>
      <listitem xml:id="numpy.reference.dtype.constructors.0">
	<constructorsynopsis language="C++">
	  <modifier>template &lt;typename T&gt;</modifier>
	  <modifier>explicit</modifier>
	  <methodname>dtype</methodname>
	  <methodparam>
	    <type>T</type>
	    <parameter>arg</parameter>
	  </methodparam>
	  <methodparam>
	    <type>bool</type>
	    <parameter>align</parameter>
	    <initializer>false</initializer>
	  </methodparam>
	</constructorsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>要件：</term>
	    <listitem>
	      <para>
		<type>T</type> が下記いずれかでなければならない。
		<itemizedlist>
		  <listitem>
		    <para>オブジェクトへ変換可能な組み込みの C++ typename</para>
		  </listitem>
		  <listitem>
		    <para>オブジェクトへ変換可能な合法な Python オブジェクト</para>
		  </listitem>
		</itemizedlist>
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>効果：</term>
	    <listitem>
	      <para>
		与えられた Python オブジェクト、オブジェクトへ変換可能なオブジェクト、組み込み C++ データ型からオブジェクトを構築する。
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>例外：</term>
	    <listitem>
	      <para>
		なし
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.dtype.constructors.get_builtin">
	<methodsynopsis language="C++">
	  <modifier>template &lt;typename&gt; static</modifier>
	  <type>dtype</type>
	  <methodname>get_buitlin</methodname>
	  <void/>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>要件：</term>
	    <listitem>
	      <para>typename で与えられた <type>T</type> が、numpy がサポートする組み込み C++ 型でなければならない。</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>組み込み C++ 型に対応する numpy の dtype。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>
    </orderedlist>
  </refsection>

  <refsection xml:id="numpy.reference.dtype.accessors">
    <title>アクセッサ</title>
    <orderedlist>
      <listitem xml:id="numpy.reference.dtype.accessors.get_itemsize">
	<methodsynopsis language="C++">
	  <type>int</type>
	  <methodname>get_itemsize</methodname>
	  <void/>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>データ型のバイト数。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>
    </orderedlist>
  </refsection>

  <refsection xml:id="numpy.reference.dtype.examples">
    <title>使用例</title>
    <programlisting language="C++"><![CDATA[namespace p = boost::python;
namespace np = boost::python::numpy;

np::dtype dtype = np::dtype::get_builtin<double>();
p::tuple for_custom_dtype = p::make_tuple("ha",dtype);
np::dtype custom_dtype = np::dtype(list_for_dtype);]]></programlisting>
  </refsection>
</refentry>
