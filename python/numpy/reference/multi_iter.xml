<?xml version="1.0" ?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="ja" version="5.0" xml:id="numpy.reference.multi_iter">
  <refmeta>
    <refentrytitle>multi_iter</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>multi_iter</refname>
    <refpurpose>
      <classname>multi_iter</classname> はイテレータとして使う Python オブジェクトである。通常、ループ内でのみ使用する。
      <filename class="headerfile">&lt;boost/python/numpy/ufunc.hpp&gt;</filename> は <classname>multi_iter</classname> のクラス定義をもつ。
    </refpurpose>
  </refnamediv>

  <refsynopsisdiv xml:id="numpy.reference.multi_iter.synopsis">
    <synopsis language="C++">namespace boost
{
namespace python
{
namespace numpy
{

class <classname>multi_iter</classname> : public object
{
public:
  void <methodname linkend="numpy.reference.multi_iter.accessors.next">next</methodname>();
  bool <methodname linkend="numpy.reference.multi_iter.accessors.not_done">not_done</methodname>() const;
  char * <methodname linkend="numpy.reference.multi_iter.accessors.get_data">get_data</methodname>(int n) const;
  int const <methodname linkend="numpy.reference.multi_iter.accessors.get_nd">get_nd</methodname>() const;
  Py_intptr_t const * <methodname linkend="numpy.reference.multi_iter.accessors.get_shape">get_shape</methodname>() const;
  Py_intptr_t const <methodname linkend="numpy.reference.multi_iter.accessors.shape">shape</methodname>(int n) const;
};


<classname>multi_iter</classname> <methodname linkend="numpy.reference.multi_iter.constructors.0">make_multi_iter</methodname>(object const &amp; a1);
<classname>multi_iter</classname> <methodname linkend="numpy.reference.multi_iter.constructors.0">make_multi_iter</methodname>(object const &amp; a1, object const &amp; a2);
<classname>multi_iter</classname> <methodname linkend="numpy.reference.multi_iter.constructors.0">make_multi_iter</methodname>(object const &amp; a1, object const &amp; a2, object const &amp; a3);

}
}
}</synopsis>
  </refsynopsisdiv>

  <refsection xml:id="numpy.reference.multi_iter.constructors">
    <title>コンストラクタ</title>
    <orderedlist>
      <listitem xml:id="numpy.reference.multi_iter.constructors.0">
	<methodsynopsis language="C++">
	  <type>multi_iter</type>
	  <methodname>make_multi_iter</methodname>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a1</parameter>
	  </methodparam>
	</methodsynopsis>
	<methodsynopsis language="C++">
	  <type>multi_iter</type>
	  <methodname>make_multi_iter</methodname>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a1</parameter>
	  </methodparam>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a2</parameter>
	  </methodparam>
	</methodsynopsis>
	<methodsynopsis language="C++">
	  <type>multi_iter</type>
	  <methodname>make_multi_iter</methodname>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a1</parameter>
	  </methodparam>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a2</parameter>
	  </methodparam>
	  <methodparam>
	    <type>object const &amp;</type>
	    <parameter>a3</parameter>
	  </methodparam>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>与えた 1 つから 3 つのシーケンスをブロードキャストする Python イテレータオブジェクト。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>
    </orderedlist>
  </refsection>

  <refsection xml:id="numpy.reference.multi_iter.accessors">
    <title>アクセッサ</title>
    <orderedlist>
      <listitem xml:id="numpy.reference.multi_iter.accessors.next">
	<methodsynopsis language="C++">
	  <type>void</type>
	  <methodname>next</methodname>
	  <void/>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>効果：</term>
	    <listitem>
	      <para>イテレータを進める。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.multi_iter.accessors.not_done">
	<methodsynopsis language="C++">
	  <type>bool</type>
	  <methodname>not_done</methodname>
	  <void/>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>イテレータが終端に到達したかを表す論理値。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.multi_iter.accessors.get_data">
	<methodsynopsis language="C++">
	  <type>char *</type>
	  <methodname>get_data</methodname>
	  <methodparam>
	    <type>int</type>
	    <parameter>n</parameter>
	  </methodparam>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>ブロードキャストした <parameter>n</parameter> 番目の配列の要素へのポインタ。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.multi_iter.accessors.get_nd">
	<methodsynopsis language="C++">
	  <type>int const</type>
	  <methodname>get_nd</methodname>
	  <void/>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>ブロードキャストした配列式の次元数。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.multi_iter.accessors.get_shape">
	<methodsynopsis language="C++">
	  <type>Py_intptr_t const *</type>
	  <methodname>get_shape</methodname>
	  <void/>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>ブロードキャストした配列式の形状を表す整数配列。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>

      <listitem xml:id="numpy.reference.multi_iter.accessors.shape">
	<methodsynopsis language="C++">
	  <type>Py_intptr_t const</type>
	  <methodname>shape</methodname>
	  <methodparam>
	    <type>int</type>
	    <parameter>n</parameter>
	  </methodparam>
	  <modifier>const</modifier>
	</methodsynopsis>
	<variablelist spacing="compact">
	  <varlistentry>
	    <term>戻り値：</term>
	    <listitem>
	      <para>ブロードキャストした配列式の第 <parameter>n</parameter> 次元の形状。</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </listitem>
    </orderedlist>
  </refsection>
</refentry>
